---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: nice-note-ingress
  namespace: noteapp
  annotations:
    kubernetes.io/ingress.class: "nginx"
    # kubernetes.io/ingress.allow-http: "false"
    # certmanager.k8s.io/cluster-issuer: letsencrypt-staging
    # kubernetes.io/ingress.global-static-ip-name: "nice-note-ip"
  labels:
    app: "nice-note"
spec:
  backend:
    serviceName: default-http-backend
    servicePort: 80
  # tls:
  # - hosts:
  #   - notes.robinyonge.com
  #   secretName: notes-dot-robinyonge-dot-com-crt
  rules:
  # - host: notes.robinyonge.com
  - http:
      paths:
      - path: /
        backend:
          serviceName: nice-note-nodeport
          servicePort: 80
---
# kind: Service
# apiVersion: v1
# metadata:
#   name: ingress-nginx
#   namespace: ingress-nginx
#   labels:
#     app.kubernetes.io/name: ingress-nginx
#     app.kubernetes.io/part-of: ingress-nginx
# spec:
#   externalTrafficPolicy: Local
#   type: LoadBalancer
#   selector:
#     app.kubernetes.io/name: ingress-nginx
#     app.kubernetes.io/part-of: ingress-nginx
#   ports:
#     - name: http
#       port: 80
#       targetPort: http
#     - name: https
#       port: 443
#       targetPort: https
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: default-http-backend
  namespace: ingress-nginx
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: default-http-backend
    spec:
      terminationGracePeriodSeconds: 60
      containers:
      - name: default-http-backend
        # Any image is permissable as long as:
        # 1. It serves a 404 page at /
        # 2. It serves 200 on a /healthz endpoint
        image: gcr.io/google_containers/defaultbackend:1.0
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 5
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 10m
            memory: 20Mi
          requests:
            cpu: 10m
            memory: 20Mi
---
kind: Service
apiVersion: v1
metadata:
  name: default-http-backend
  namespace: ingress-nginx
spec:
  selector:
    app: default-http-backend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort